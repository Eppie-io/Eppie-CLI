<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Header.Description" xml:space="preserve">
    <value>Application started.</value>
    <comment>Application description and additional information.</comment>
  </data>
  <data name="Header.LogoFormat" xml:space="preserve">
    <value>Hello, I'm {0} (version {1}).</value>
    <comment>The startup banner or the copyright message.
{0} is a parameter containing the title of the application;
{1} is a parameter containing the version of the application.</comment>
  </data>
  <data name="Message.Goodbye" xml:space="preserve">
    <value>Application is shutting down...</value>
    <comment>Application farewell message.</comment>
  </data>
  <data name="Menu.ExitDescription" xml:space="preserve">
    <value>Exit the application.</value>
    <comment>Description of the 'exit' command in the help.</comment>
  </data>
  <data name="Menu.InitDescription" xml:space="preserve">
    <value>Initialize the application and create Eppie account.</value>
    <comment>Description of the 'init' command in the help.</comment>
  </data>
  <data name="Menu.OpenDescription" xml:space="preserve">
    <value>Open an existing Eppie account.</value>
    <comment>Description of the 'open' command in the help.</comment>
  </data>
  <data name="Menu.ResetDescription" xml:space="preserve">
    <value>Reset the application and erase all of its data.</value>
    <comment>Description of the 'reset' command in the help.</comment>
  </data>
  <data name="Error.UnhandledException" xml:space="preserve">
    <value>An error has occurred: 
{0}</value>
    <comment>{0} contains error information.</comment>
  </data>
  <data name="Message.SeedPhraseFooter" xml:space="preserve">
    <value>IMPORTANT, copy and keep it in secret.</value>
  </data>
  <data name="Message.SeedPhraseHeader" xml:space="preserve">
    <value>The application has been initialized. Your seed phrase is</value>
  </data>
  <data name="Warning.InvalidPassword" xml:space="preserve">
    <value>Warning: Invalid password.</value>
    <comment>This message warns the user that the password is incorrect.</comment>
  </data>
  <data name="Warning.SecondInitialization" xml:space="preserve">
    <value>Warning: The application has already been initialized.</value>
    <comment>This message warns the user that a second initialization is being attempted.</comment>
  </data>
  <data name="Error.ImpossibleInitialization" xml:space="preserve">
    <value>Error: The application could not be initialized.</value>
    <comment>This message alerts the user that the application cannot be initialized.</comment>
  </data>
  <data name="Message.AppOpened" xml:space="preserve">
    <value>The application was opened successfully.</value>
    <comment>This message indicates to the user that the application has opened.</comment>
  </data>
  <data name="Message.AppReset" xml:space="preserve">
    <value>The application has just been reset.</value>
    <comment>This message indicates to the user that the application has been reset to default settings and privacy data has been removed.</comment>
  </data>
  <data name="Message.AskPassword" xml:space="preserve">
    <value>Enter the vault password: </value>
    <comment>This message prompts the user to enter the vault password.</comment>
  </data>
  <data name="Message.ConfirmPassword" xml:space="preserve">
    <value>Confirm your vault password: </value>
    <comment>This message prompts the user to confirm the vault password.</comment>
  </data>
  <data name="Warning.Uninitialized" xml:space="preserve">
    <value>Warning: The application hasn't been initialized yet.</value>
    <comment>This message warns the user that the application hasn't been initialized yet.</comment>
  </data>
  <data name="Message.AskAccountAddress" xml:space="preserve">
    <value>Enter account address: </value>
    <comment>This message prompts the user to enter the service account address.</comment>
  </data>
  <data name="Message.AskAccountPassword" xml:space="preserve">
    <value>Enter account password: </value>
    <comment>This message prompts the user to enter the service account password.</comment>
  </data>
  <data name="Message.AskIMAPServer" xml:space="preserve">
    <value>Enter IMAP server{0}: </value>
    <comment>This message prompts the user to enter the IMAP server address.
{0} is a parameter that can contain a default parameter as "Message.DefaultServerTemplate".</comment>
  </data>
  <data name="Message.AskSMTPServer" xml:space="preserve">
    <value>Enter SMTP server{0}: </value>
    <comment>This message prompts the user to enter the SMTP server address.
{0} is a parameter that can contain a default parameter as "Message.DefaultServerTemplate".</comment>
  </data>
  <data name="Menu.AddAccountDescription" xml:space="preserve">
    <value>Add a service account.</value>
    <comment>Description of the 'add-account' command in the help.</comment>
  </data>
  <data name="Menu.ListAccountsDescription" xml:space="preserve">
    <value>Display a list of accounts.</value>
    <comment>Description of the 'list-accounts' command in the help.</comment>
  </data>
  <data name="Message.EmptyAccountList" xml:space="preserve">
    <value>There are no accounts yet.</value>
    <comment>This message informs the user that no service accounts were added.</comment>
  </data>
  <data name="Message.HeaderAccountList" xml:space="preserve">
    <value>Accounts:</value>
    <comment>This is the header for the list of accounts.</comment>
  </data>
  <data name="Message.AppRestored" xml:space="preserve">
    <value>Your Eppie account has been restored successfully.</value>
    <comment>This message indicates to the user that the application has been restored from a backup.</comment>
  </data>
  <data name="Message.AskSeedPhrase" xml:space="preserve">
    <value>Enter seed phrase: </value>
    <comment>This message prompts the user to enter a seed phrase.</comment>
  </data>
  <data name="Message.ConfirmReset" xml:space="preserve">
    <value>All local data will be lost. Do you want to continue? (y/n): </value>
    <comment>This message prompts the user to confirm to reset the application.</comment>
  </data>
  <data name="MenuOption.ReceiverDescription" xml:space="preserve">
    <value>Receiver address.</value>
    <comment>Description of the 'send' command option in the help.</comment>
  </data>
  <data name="MenuOption.SenderDescription" xml:space="preserve">
    <value>Sender address.</value>
    <comment>Description of the 'send' command option in the help.</comment>
  </data>
  <data name="MenuOption.SubjectDescription" xml:space="preserve">
    <value>Message subject.</value>
    <comment>Description of the 'send' command option in the help.</comment>
  </data>
  <data name="Message.AskNewPassword" xml:space="preserve">
    <value>Enter your new vault password: </value>
    <comment>This message prompts the user to enter a new vault password.</comment>
  </data>
  <data name="Message.AskRestorePath" xml:space="preserve">
    <value>Enter the restore URI: </value>
    <comment>This message prompts the user to enter the path to the backup.</comment>
  </data>
  <data name="Menu.RestoreDescription" xml:space="preserve">
    <value>Restore your Eppie account.</value>
    <comment>Description of the 'restore' command in the help.</comment>
  </data>
  <data name="Menu.SendDescription" xml:space="preserve">
    <value>Send a message.</value>
    <comment>Description of the 'send' command in the help.</comment>
  </data>
  <data name="MenuOption.AccountTypeDescription" xml:space="preserve">
    <value>Type of account.</value>
    <comment>Description of the 'add-account' command option in the help.</comment>
  </data>
  <data name="Menu.Description" xml:space="preserve">
    <value>{0} (version {1}).</value>
    <comment>Description of the main menu in the help.
{0} is a parameter containing the title of the application;
{1} is a parameter containing the version of the application.</comment>
  </data>
  <data name="Message.AskMessageBody" xml:space="preserve">
    <value>Enter a text message (end input with 'EOF' on a new line or Ctrl+C for cancel): </value>
    <comment>This message prompts the user to enter a text message.</comment>
  </data>
  <data name="Menu.ImportDescription" xml:space="preserve">
    <value>Import a key bundle from a file.</value>
    <comment>Description of the 'import' command in the help.</comment>
  </data>
  <data name="MenuOption.KeyBundleFileDescription" xml:space="preserve">
    <value>A key bundle file.</value>
    <comment>Description of the 'import' command option in the help.</comment>
  </data>
  <data name="Warning.UnknownFolder" xml:space="preserve">
    <value>Warning: Folder '{0}' not found (check '{1}' address).</value>
    <comment>This message warns the user that the folder not found.
{0} is a parameter containing the folder name.
{1} is a parameter containing the address.</comment>
  </data>
  <data name="Menu.ShowMessageDescription" xml:space="preserve">
    <value>Show details of a specific message.</value>
    <comment>Description of the 'show-message' command in the help.</comment>
  </data>
  <data name="MenuOption.AccountAddressDescription" xml:space="preserve">
    <value>Account address.</value>
    <comment>Description of the 'show-message' command option in the help.</comment>
  </data>
  <data name="MenuOption.AccountFolderDescription" xml:space="preserve">
    <value>Account folder name.</value>
    <comment>Description of the 'show-message' command option in the help.</comment>
  </data>
  <data name="MenuOption.MessageIDDescription" xml:space="preserve">
    <value>Message ID.</value>
    <comment>Description of the 'show-message' command option in the help.</comment>
  </data>
  <data name="MenuOption.MessagePKDescription" xml:space="preserve">
    <value>The primary key of the message in the database.</value>
    <comment>Description of the 'show-message' command option in the help.</comment>
  </data>
  <data name="Menu.SyncFolderDescription" xml:space="preserve">
    <value>Sync messages in specific account folder.</value>
    <comment>Description of the 'sync-folder' command in the help.</comment>
  </data>
  <data name="Menu.ShowAllMessagesDescription" xml:space="preserve">
    <value>Show all messages from all accounts.</value>
    <comment>Description of the 'show-all-messages' command in the help.</comment>
  </data>
  <data name="Menu.ShowContactMessagesDescription" xml:space="preserve">
    <value>Show messages from a specific contact.</value>
    <comment>Description of the 'show-contact-messages' command in the help.</comment>
  </data>
  <data name="Menu.ShowFolderMessagesDescription" xml:space="preserve">
    <value>Show messages from a specific account folder.</value>
    <comment>Description of the 'show-folder-messages' command in the help.</comment>
  </data>
  <data name="MenuOption.ContactAddressDescription" xml:space="preserve">
    <value>Contact address.</value>
    <comment>Description of the 'show-contact-messages' command option in the help.</comment>
  </data>
  <data name="Information.MessageAttachmentsCountProperty" xml:space="preserve">
    <value>Message has {0} attachments.</value>
    <comment>This is a text format for displaying the number of email attachments.
{0} is a parameter containing the number of attachments.</comment>
  </data>
  <data name="Information.MessageBccProperty" xml:space="preserve">
    <value>Bcc: {0};</value>
    <comment>This is the text format for displaying the "Bcc" property of the email.
{0} is a parameter containing "Bcc" addresses.</comment>
  </data>
  <data name="Information.MessageCcProperty" xml:space="preserve">
    <value>Cc: {0};</value>
    <comment>This is the text format for displaying the "Cc" property of the email.
{0} is a parameter containing "Cc" addresses.</comment>
  </data>
  <data name="Information.MessageDateProperty" xml:space="preserve">
    <value>Date: {0};</value>
    <comment>This is the text format for displaying the date of the email.
{0} is a parameter containing the date of the message.</comment>
  </data>
  <data name="Information.MessageDetails" xml:space="preserve">
    <value>Details of message #{0}: PK={1}; Date {2}; To: {3}; From {4}; Folder: {5}; Subject {6};</value>
    <comment>This is the text format for displaying email details.
{0} is a parameter containing the message id.
{1} is a parameter containing the message primary key.
{2} is a parameter containing the date of the message.
{3} is a parameter containing the receiver's address.
{4} is a parameter containing the sender's address.
{5} is a parameter containing the folder name.
{6} is a parameter containing the subject of the message.</comment>
  </data>
  <data name="Information.MessageFolder" xml:space="preserve">
    <value>Folder: {0};</value>
    <comment>This is the text format for displaying the folder of the email.
{0} is a parameter containing the folder name.</comment>
  </data>
  <data name="Information.MessageFromProperty" xml:space="preserve">
    <value>From: {0};</value>
    <comment>This is the text format for displaying the "From" property of the email.
{0} is a parameter containing "From" address.</comment>
  </data>
  <data name="Information.MessageIDProperty" xml:space="preserve">
    <value>ID: {0};</value>
    <comment>This is the text format for displaying a unique email ID.
{0} is a parameter containing the message id.</comment>
  </data>
  <data name="Information.MessagePKProperty" xml:space="preserve">
    <value>PK: {0};</value>
    <comment>This is the text format for displaying the email key in the database.
{0} is a parameter containing the message primary key.</comment>
  </data>
  <data name="Information.MessageSubjectProperty" xml:space="preserve">
    <value>Subject: {0};</value>
    <comment>This is the text format for displaying the subject of the email.
{0} is a parameter containing the subject of the message.</comment>
  </data>
  <data name="Information.MessageToProperty" xml:space="preserve">
    <value>To: {0};</value>
    <comment>This is the text format for displaying the "To" property of the email.
{0} is a parameter containing "To" address.</comment>
  </data>
  <data name="Information.PrintAllMessagesHeader" xml:space="preserve">
    <value>All messages:</value>
    <comment>Header text for list of all email messages.</comment>
  </data>
  <data name="Information.PrintFolderMessagesHeader" xml:space="preserve">
    <value>Messages for {0}/{1}:</value>
    <comment>Header format text for a list of email messages in a specific account folder.
{0} is a parameter containing the account address.
{1} is a parameter containing the folder name.</comment>
  </data>
  <data name="MenuOption.PageSizeDescription" xml:space="preserve">
    <value>Number of messages displayed at a time.</value>
    <comment>Description of the 'show-all-messages' command option in the help.</comment>
  </data>
  <data name="Information.PrintContactMessagesHeader" xml:space="preserve">
    <value>Messages for contact {0}:</value>
    <comment>Header format text for a list of email messages from a specific contact.
{0} is a parameter containing the contact address.
</comment>
  </data>
  <data name="Message.AskMoreMessages" xml:space="preserve">
    <value>Show more messages? (y/n): </value>
    <comment>This message prompts the user to show more messages.</comment>
  </data>
  <data name="Information.ContactDetails" xml:space="preserve">
    <value>Contact #{0}: {2}&lt;{1}&gt;; {3} unread message(s);</value>
    <comment>This is the text format for displaying contact information.
{0} is a parameter containing the contact id.
{1} is a parameter containing the contact address.
{2} is a parameter containing the full name of the contact.
{3} is a parameter containing the number of unread messages.</comment>
  </data>
  <data name="Menu.ListContactsDescription" xml:space="preserve">
    <value>Display all account contacts.</value>
    <comment>Description of the 'list-contacts' command in the help.</comment>
  </data>
  <data name="Message.AskMoreContacts" xml:space="preserve">
    <value>Show more contacts? (y/n): </value>
    <comment>This message prompts the user to show more contacts.</comment>
  </data>
  <data name="Message.EmptyContactList" xml:space="preserve">
    <value>There are no contacts yet.</value>
    <comment>This message informs the user that no contacts were found.</comment>
  </data>
  <data name="Message.AskOption" xml:space="preserve">
    <value>Your selection (default: {0}): </value>
    <comment>This message prompts the user to select one of the options.
{0} is the parameter containing the default option.</comment>
  </data>
  <data name="Message.AuthorizationCanceled" xml:space="preserve">
    <value>Authorization operation has been canceled.</value>
    <comment>This message informs the user that the authorization operation was canceled.</comment>
  </data>
  <data name="Message.SelectOptionHeader" xml:space="preserve">
    <value>Please select which option you want:</value>
    <comment>Header text for the list of options that the user is asked to select.</comment>
  </data>
  <data name="Message.AskMailboxPassword" xml:space="preserve">
    <value>Enter mailbox password: </value>
    <comment>This message asks the user to enter the proton mailbox password.</comment>
  </data>
  <data name="Message.AskTwoFactorCode" xml:space="preserve">
    <value>Enter two-factor code: </value>
    <comment>This message asks the user to enter the two-factor code.</comment>
  </data>
  <data name="Message.AskIMAPPort" xml:space="preserve">
    <value>IMAP Port (default is {0}): </value>
    <comment>This message prompts the user to enter the IMAP server port.
{0} is a parameter containing the default value.</comment>
  </data>
  <data name="Message.AskSMTPPort" xml:space="preserve">
    <value>SMTP Port (default is {0}): </value>
    <comment>This message prompts the user to enter the SMTP server port.
{0} is a parameter containing the default value.</comment>
  </data>
  <data name="Message.DefaultServerTemplate" xml:space="preserve">
    <value> (default is {0})</value>
    <comment>This is the text template for the default server address.
{0} is a parameter containing the default server address.</comment>
  </data>
  <data name="Message.AuthorizationToService" xml:space="preserve">
    <value>Authorization to {0} service. Press Ctrl+C to cancel the operation.</value>
    <comment>This message informs the user that authorization to a service is starting.
{0} is a parameter containing the service name.</comment>
  </data>
  <data name="Message.AuthorizationCompleted" xml:space="preserve">
    <value>Authorization completed successfully.</value>
    <comment>This message informs the user that authorization was completed successfully.</comment>
  </data>
</root>
