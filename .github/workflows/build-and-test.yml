################################################################################
#                                                                              #
#   Copyright 2023 Eppie (https://eppie.io)                                    #
#                                                                              #
#   Licensed under the Apache License, Version 2.0 (the "License");            #
#   you may not use this file except in compliance with the License.           #
#   You may obtain a copy of the License at                                    #
#                                                                              #
#       http://www.apache.org/licenses/LICENSE-2.0                             #
#                                                                              #
#   Unless required by applicable law or agreed to in writing, software        #
#   distributed under the License is distributed on an "AS IS" BASIS,          #
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
#   See the License for the specific language governing permissions and        #
#   limitations under the License.                                             #
#                                                                              #
################################################################################

name: Build and Test

on:
  push:
    branches:
      - main
      - develop
      - release/**
  pull_request:
    branches:
      - main
      - develop
      - release/**

env:
  project: src/Eppie.CLI/Eppie.CLI/Eppie.CLI.csproj
  test-project: ${{ null }}
  test-report-root: src/Eppie.CLI/TestResults
  dotnet-version: 8.x

jobs:

  coding-style:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Install dotnet
      uses: actions/setup-dotnet@6bd8b7f7774af54e05809fcc5431931b3eb1ddee # v4.0.1
      with:
        dotnet-version: ${{ env.dotnet-version }}

    - name: Check formatting
      run: dotnet format ${{ env.project }} --verify-no-changes

  build:
    needs: [coding-style]
    strategy:
      matrix:
        configuration: [Debug, Release]
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      configuration: ${{ matrix.configuration }}

    steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Install dotnet
      uses: actions/setup-dotnet@6bd8b7f7774af54e05809fcc5431931b3eb1ddee # v4.0.1
      with:
        dotnet-version: ${{ env.dotnet-version }}

    - name: Build
      run: dotnet build ${{ env.project }} --configuration ${{ env.configuration }}
        
    - name: Test
      if: env.test-project != ''
      run: dotnet test ${{ env.test-project }} --configuration ${{ env.configuration }} --collect:"XPlat Code Coverage" --results-directory="${{ env.test-report-root }}"

    - name: Get branch name
      if: ${{ env.test-project != '' && runner.os == 'Linux' }}
      id: branch
      run: |
        branch=$(echo "$GITHUB_REF_NAME")
        name=$([ -z $branch ] && echo "unknown" || echo "$branch" | sed -r 's/[\/]+/-/g')
        echo "name=$name" >> $GITHUB_OUTPUT

    - name: Generate test coverage badge
      if: ${{ env.test-project != '' && runner.os == 'Linux' && env.gist-id != '' && env.gist-auth-token != '' }}
      uses: finebits/github-actions/badges/coverlet-coverage-badge@v1.5.1
      with:
        label: "coverage"
        report-root: "${{ env.test-report-root }}/**/"
        report-filename: coverage.cobertura.xml
        gist-filename-format: "${{ github.event.repository.name }}-${{ env.branch-name }}-{0}-test-coverage.json"
        gist-id: ${{ env.gist-id }}
        gist-auth-token: ${{ env.gist-auth-token }}
      env:
        gist-id: ${{ vars.BADGE_COVERLET_COVERAGE_GIST_ID }}
        gist-auth-token: ${{ secrets.TOKEN_GITHUB_GIST }}
        branch-name: ${{ steps.branch.outputs.name }}